function Pn = calculatePn()

%sampling frequency determines the bandwidth. (user defined)
channel_order = 5;
seq_len = 10000;
qam_dim = 1;
nfft = 20;
prefix_length = 6;
snr = 30;
fs = 16000;
%-------------------------------EXAMPLE SEE MAIN-----------------------
%make an impulse response
%add noise
%convolution with H
%outcome ->psd
%psd-H*X ( fft input sig)
%this is the noise psd

%Create sequence and channel

channel_model = randn(1,channel_order);
channel_freq_response = fft(channel_model, nfft);



mod_seq_filt = fftfilt(channel_model,mod_seq);
%add Noise
noiseOfdmStream = awgn(mod_seq_filt,snr);
%Ofmd demodulation

% BER
ber(seq, demod_seq') %should not be equal to zero

[Pout] = pwelch(demod_seq,1000, 500, nfft, fs);  %recorded signal PSD

[Ps] = pwelch(mod_seq,1000,500,nfft,fs);
%let ps go through filter
TfSquared = channel_freq_response*conj(channel_freq_response)';

PsFiltered = TfSquared*Ps;


Pn = Pout - PsFiltered % Calculate actual signal power


end
